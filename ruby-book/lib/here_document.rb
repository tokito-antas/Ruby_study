# ヒアドキュメント（識別子には慣習的に大文字を利用する）
a = <<TEXT
これはヒアドキュメントです。
複数行にわたる長い文字列を作成するのに便利です。
TEXT
puts a

puts('--------------------------------------')

# ヒアドキュメント -を使う
b = <<-TEXT
これはヒアドキュメントです。
<<-を使用することで、最後の識別子をインデントさせることができる
  TEXT
puts b

puts('--------------------------------------')

# ヒアドキュメント ~を使う
c = <<~TEXT
  これはヒアドキュメントです。
  <<~を使用することで、内部文字列のインデントが無視される
TEXT
puts c

puts('--------------------------------------')

# ヒアドキュメントの中では式展開ができる
name = "Alice"
d = <<TEXT
ようこそ、#{name}さん！
メッセージをご覧ください。
TEXT

puts d

puts('--------------------------------------')

# ヒアドキュメントを直接引数として渡す
# prependは渡された文字列を先頭に追加するメソッド
language = 'Ruby'
language.prepend(<<TEXT)
Java
Python
TEXT
puts language

puts('--------------------------------------')

# ヒアドキュメントで作成した文字列に対して、直接upcaseメソッドを呼び出す
greeting = <<TEXT.upcase
hello,
good-bye.
TEXT
puts greeting

puts('--------------------------------------')

# ヒアドキュメントを2つ同時に使って配列を作る。

array = [<<TEXT1, <<TEXT2]
Alice
Bob
TEXT1
Matz
Jnchito
TEXT2

puts('これは1つ目')
puts array[0]
puts('これは2つ目')
puts array[1]